//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#pragma warning(push)
#pragma warning(disable: 4100) // unreferenced formal parameter

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "DirectXPage.xaml.h"

void ::Simple3DGame::DirectXPage::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///DirectXPage.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}

void ::Simple3DGame::DirectXPage::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
    case 2:
        {
            this->swapChainPanel = safe_cast<::Windows::UI::Xaml::Controls::SwapChainPanel^>(__target);
        }
        break;
    case 3:
        {
            this->start_box_grid = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 4:
        {
            this->right_chooser = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 5:
        {
            this->game_hud = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 6:
        {
            this->settings_area = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 7:
        {
            this->quit_quest = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 8:
        {
            this->pause_area = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 9:
        {
            this->choose_name_screen = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 10:
        {
            this->name_enter_screen = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 11:
        {
            this->start_screen = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 12:
        {
            this->game_title = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 13:
        {
            this->fade_screen = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 14:
        {
            this->GameTitle = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 15:
        {
            this->continue_button = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->continue_button))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::continue_button_Tapped);
        }
        break;
    case 16:
        {
            this->new_player_button = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->new_player_button))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::new_player_button_Tapped);
        }
        break;
    case 17:
        {
            this->textBlock1 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 18:
        {
            this->textBlock1a = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 19:
        {
            this->player_name = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(this->player_name))->KeyDown += ref new ::Windows::UI::Xaml::Input::KeyEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::KeyRoutedEventArgs^))&DirectXPage::player_name_KeyDown);
        }
        break;
    case 20:
        {
            ::Windows::UI::Xaml::Controls::Button^ element20 = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Button^>(element20))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::Button_name_ok);
        }
        break;
    case 21:
        {
            this->names_list = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ListView^>(this->names_list))->SelectionChanged += ref new ::Windows::UI::Xaml::Controls::SelectionChangedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::SelectionChangedEventArgs^))&DirectXPage::name_list_SelectionChanged);
        }
        break;
    case 24:
        {
            ::Windows::UI::Xaml::Controls::TextBlock^ element24 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(element24))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::Continue_Tapped);
        }
        break;
    case 25:
        {
            ::Windows::UI::Xaml::Controls::TextBlock^ element25 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(element25))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::Options_Tapped);
        }
        break;
    case 26:
        {
            ::Windows::UI::Xaml::Controls::TextBlock^ element26 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(element26))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::Exit_Tapped);
        }
        break;
    case 27:
        {
            this->MyList = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ListView^>(this->MyList))->SelectionChanged += ref new ::Windows::UI::Xaml::Controls::SelectionChangedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::SelectionChangedEventArgs^))&DirectXPage::MyList_SelectionChanged);
            (safe_cast<::Windows::UI::Xaml::Controls::ListView^>(this->MyList))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::MyList_DoubleTapped);
        }
        break;
    case 30:
        {
            this->full_game_button = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->full_game_button))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::Full_Tapped);
        }
        break;
    case 31:
        {
            this->pause_player_name = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 32:
        {
            ::Windows::UI::Xaml::Controls::TextBlock^ element32 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(element32))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::exit_yes_tapped);
        }
        break;
    case 33:
        {
            ::Windows::UI::Xaml::Controls::TextBlock^ element33 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(element33))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::exit_no_tapped);
        }
        break;
    case 34:
        {
            ::Windows::UI::Xaml::Controls::TextBlock^ element34 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(element34))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::ok_tapped);
        }
        break;
    case 35:
        {
            this->controls_on = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->controls_on))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::controls_tapped);
        }
        break;
    case 36:
        {
            this->music_on = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->music_on))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::music_tapped);
        }
        break;
    case 37:
        {
            this->shader_type = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->shader_type))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::shader_tapped);
        }
        break;
    case 38:
        {
            this->TimeText = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 39:
        {
            this->optionsbox = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 40:
        {
            this->textBlock = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 41:
        {
            this->button_menu = safe_cast<::Windows::UI::Xaml::Controls::Image^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Image^>(this->button_menu))->PointerEntered += ref new ::Windows::UI::Xaml::Input::PointerEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::PointerRoutedEventArgs^))&DirectXPage::button_menu_PointerEntered);
        }
        break;
    case 42:
        {
            this->title = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 43:
        {
            this->points_box = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 44:
        {
            this->rockets_box = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 45:
        {
            this->rings_box = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 46:
        {
            this->button_respot = safe_cast<::Windows::UI::Xaml::Controls::Image^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Image^>(this->button_respot))->PointerEntered += ref new ::Windows::UI::Xaml::Input::PointerEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::PointerRoutedEventArgs^))&DirectXPage::button_respot_PointerEntered);
        }
        break;
    case 47:
        {
            this->button_level_back = safe_cast<::Windows::UI::Xaml::Controls::Image^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Image^>(this->button_level_back))->PointerEntered += ref new ::Windows::UI::Xaml::Input::PointerEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::PointerRoutedEventArgs^))&DirectXPage::button_level_back_PointerPressed);
        }
        break;
    case 48:
        {
            this->button_for_back = safe_cast<::Windows::UI::Xaml::Controls::Image^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Image^>(this->button_for_back))->PointerEntered += ref new ::Windows::UI::Xaml::Input::PointerEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::PointerRoutedEventArgs^))&DirectXPage::button_level_for_PointerPressed);
        }
        break;
    case 49:
        {
            this->time_text = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 50:
        {
            this->itempo_check = safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->itempo_check))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::itempo_check_Checked);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->itempo_check))->Unchecked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::itempo_check_Unchecked);
        }
        break;
    case 51:
        {
            this->cont_check = safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->cont_check))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::cont_check_Checked);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->cont_check))->Unchecked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::cont_check_Unchecked);
        }
        break;
    case 52:
        {
            this->grid_check = safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->grid_check))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::grid_check_Checked);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->grid_check))->Unchecked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::grid_check_Unchecked);
        }
        break;
    case 53:
        {
            this->cam_check = safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->cam_check))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::cam_check_Checked);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->cam_check))->Unchecked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::cam_check_Unchecked);
        }
        break;
    case 54:
        {
            this->ray_check = safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->ray_check))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::ray_check_Checked);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->ray_check))->Unchecked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::ray_check_Unchecked);
        }
        break;
    case 55:
        {
            this->rotate_check = safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->rotate_check))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::rotate_check_Checked);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->rotate_check))->Unchecked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::rotate_check_Unchecked);
        }
        break;
    case 56:
        {
            this->fix_height = safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->fix_height))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::fix_height_Checked);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->fix_height))->Unchecked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::fix_height_Unchecked);
        }
        break;
    case 57:
        {
            this->player_pos = safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->player_pos))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::player_pos_Checked);
            (safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(this->player_pos))->Unchecked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::player_pos_Unchecked);
        }
        break;
    case 58:
        {
            this->items_list = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ListView^>(this->items_list))->SelectionChanged += ref new ::Windows::UI::Xaml::Controls::SelectionChangedEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::SelectionChangedEventArgs^))&DirectXPage::items_list_SelectionChanged);
            (safe_cast<::Windows::UI::Xaml::Controls::ListView^>(this->items_list))->PointerPressed += ref new ::Windows::UI::Xaml::Input::PointerEventHandler(this, (void (::Simple3DGame::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::PointerRoutedEventArgs^))&DirectXPage::items_list_PointerPressed);
        }
        break;
    case 60:
        {
            this->high_score = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 61:
        {
            this->start_box = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::Simple3DGame::DirectXPage::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    __connectionId;         // unreferenced
    __target;               // unreferenced
    return nullptr;
}

#pragma warning(pop)


